[gd_resource type="ShaderMaterial" load_steps=5 format=3 uid="uid://vl483f6q4wsf"]

[ext_resource type="Texture2D" uid="uid://bq77fvux6gu4d" path="res://assets/textures/WispyNoise.png" id="1_vssq8"]

[sub_resource type="Shader" id="Shader_42o7g"]
code = "shader_type spatial;
render_mode blend_add, unshaded, cull_back;

uniform sampler2D noise_texture : repeat_enable;

uniform sampler2D texture_mask;
uniform float emission_intensity = 2.0;
uniform float time_scale = 3.0;
uniform vec2 texture_scale = vec2(1.0);
uniform float edge_softness = 0.1;

varying vec3 world_coord;
varying float world_x_dot;

void vertex() {
	mat4 mat_world = mat4(
		
			normalize(INV_VIEW_MATRIX[0]) * length(MODEL_MATRIX[0]),
			normalize(INV_VIEW_MATRIX[1]) * length(MODEL_MATRIX[0]),
			normalize(INV_VIEW_MATRIX[2]) * length(MODEL_MATRIX[2]),
			MODEL_MATRIX[3]);
	mat_world *= mat4(
			vec4(cos(INSTANCE_CUSTOM.x), -sin(INSTANCE_CUSTOM.x), 0.0, 0.0), 
			vec4(sin(INSTANCE_CUSTOM.x), cos(INSTANCE_CUSTOM.x), 0.0, 0.0),
			vec4(0.0, 0.0, 1.0, 0.0),
			vec4(0.0, 0.0, 0.0, 1.0));
	MODELVIEW_MATRIX = VIEW_MATRIX * mat_world;
	world_coord = (mat_world * vec4(VERTEX, 1.0)).xyz;
	vec4 world_normal = (mat_world * vec4(NORMAL, 0.0));
	world_x_dot =  abs(dot(normalize(world_normal.xyz), vec3(1.0, 0.0, 0.0)));
}

void fragment() {
	float mask = texture(texture_mask, UV).r;
	vec2 time_based_pan = vec2(0.2, 1.0) * (-TIME * time_scale);
	float noise_xy = texture(noise_texture, world_coord.xy * texture_scale + time_based_pan).r;
	float noise_zy = texture(noise_texture, 
			world_coord.zy * texture_scale + time_based_pan + vec2(0.7, 0.3)).r;
	float noise = mix(noise_xy, noise_zy, clamp(world_x_dot, 0.0, 1.0));
	ALBEDO = COLOR.rgb;
	ALBEDO -= FOG.rgb;
	float alpha = noise * mask;
	alpha += COLOR.a - 1.0;
	alpha = clamp(alpha, 0.0, 1.0);
	
	ALBEDO = clamp(ALBEDO-abs(1.0-smoothstep(0.0, edge_softness, alpha)), 0.0, 1.0);
}"

[sub_resource type="Gradient" id="Gradient_4ty2c"]
colors = PackedColorArray(1, 1, 1, 1, 0, 0, 0, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_717dp"]
gradient = SubResource("Gradient_4ty2c")
fill = 1
fill_from = Vector2(0.5, 0.5)
fill_to = Vector2(0.5, 0)

[resource]
render_priority = 0
shader = SubResource("Shader_42o7g")
shader_parameter/emission_intensity = 1.0
shader_parameter/time_scale = 2.0
shader_parameter/texture_scale = Vector2(0.7, 0.7)
shader_parameter/edge_softness = 0.161
shader_parameter/noise_texture = ExtResource("1_vssq8")
shader_parameter/texture_mask = SubResource("GradientTexture2D_717dp")
